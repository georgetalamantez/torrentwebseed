name: libtorrent Download Magnet Link

on:
  workflow_dispatch:
    inputs:
      magnet_link:
        description: 'Magnet link to download'
        required: true
        type: string

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Pull Docker image with Python and libtorrent
        run: docker pull python:3.10-slim

      - name: Install libtorrent in Docker container
        run: |
          docker run -d --name libtorrent-downloader -v ${{ github.workspace }}/downloads:/downloads python:3.10-slim bash -c "apt-get update && apt-get install -y python3-libtorrent"

      - name: Run Python script to download magnet link using libtorrent
        run: |
          docker exec libtorrent-downloader bash -c "echo '
          import libtorrent as lt
          import time
          import sys
          
          ses = lt.session()
          params = {
              'save_path': \"/downloads\",
              'storage_mode': lt.storage_mode_t(2),
          }
          handle = lt.add_magnet_uri(ses, \"${{ github.event.inputs.magnet_link }}\", params)

          print(\"downloading metadata...\")
          while not handle.has_metadata():
              time.sleep(1)
          print(\"metadata received, starting torrent download...\")
          while handle.status().state != lt.torrent_status.seeding:
              s = handle.status()
              print(f'progress: {s.progress * 100:.2f}% (download rate: {s.download_rate / 1000:.2f} kB/s, '
                    f'upload rate: {s.upload_rate / 1000:.2f} kB/s, peers: {s.num_peers})')
              time.sleep(5)
          print(\"Download complete.\")
          ' > /downloads/download_magnet.py && python /downloads/download_magnet.py"

      - name: Stop and remove Docker container
        run: |
          docker stop libtorrent-downloader
          docker rm libtorrent-downloader

      - name: Upload downloaded files as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: downloaded-files
          path: ./downloads
